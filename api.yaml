openapi: 3.0.2
info:
  title: ''
  version: 0.0.0
paths:
  /review/add:
    post:
      tags:
        - Review
      operationId: addReviewReviewCollection
      summary: 'Creates a Review resource.'
      responses:
        204:
          description: 'Review resource created'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
        422:
          description: 'Unprocessable entity'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Review.AddNewReviewCommand.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Review.AddNewReviewCommand'
          text/html:
            schema:
              $ref: '#/components/schemas/Review.AddNewReviewCommand'
        description: 'The new Review resource'
  /reviews/get:
    get:
      tags:
        - Review
      operationId: getReviewsReviewCollection
      summary: 'Retrieves the collection of GetReviewsQueryResult resources.'
      responses:
        200:
          description: 'GetReviewsQueryResult collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Review.GetReviewsQueryResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review.GetReviewsQueryResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review.GetReviewsQueryResult'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
components:
  schemas:
    Review.AddNewReviewCommand:
      type: object
      properties:
        stars:
          type: number
        comment:
          type: string
          nullable: true
    Review.AddNewReviewCommand.jsonld:
      type: object
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        stars:
          type: number
        comment:
          type: string
          nullable: true
    Review.GetReviewsQueryResult:
      type: object
      properties:
        stars:
          type: number
        comment:
          type: string
    Review.GetReviewsQueryResult.jsonld:
      type: object
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        stars:
          type: number
        comment:
          type: string

